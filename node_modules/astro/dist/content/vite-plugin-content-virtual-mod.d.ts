/// <reference types="node" />
import fsMod from 'node:fs';
import type { Plugin } from 'vite';
import type { AstroSettings } from '../@types/astro.js';
import { getContentEntryConfigByExtMap, type ContentPaths } from './utils.js';
interface AstroContentVirtualModPluginParams {
    settings: AstroSettings;
}
export declare function astroContentVirtualModPlugin({ settings, }: AstroContentVirtualModPluginParams): Plugin;
/**
 * Generate a map from a collection + slug to the local file path.
 * This is used internally to resolve entry imports when using `getEntry()`.
 * @see `src/content/virtual-mod.mjs`
 */
export declare function getStringifiedLookupMap({ contentPaths, contentEntryConfigByExt, dataEntryExts, root, fs, }: {
    contentEntryConfigByExt: ReturnType<typeof getContentEntryConfigByExtMap>;
    dataEntryExts: string[];
    contentPaths: Pick<ContentPaths, 'contentDir' | 'config'>;
    root: URL;
    fs: typeof fsMod;
}): Promise<string>;
export {};
